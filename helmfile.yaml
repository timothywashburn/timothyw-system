repositories:
  - name: metallb
    url: https://metallb.github.io/metallb
  - name: kubernetes-dashboard
    url: https://kubernetes.github.io/dashboard/
  - name: argo
    url: https://argoproj.github.io/argo-helm
  - name: grafana
    url: https://grafana.github.io/helm-charts
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts

releases:
  - name: metallb
    namespace: metallb-system
    chart: metallb/metallb
    version: 0.15.2
    createNamespace: true

  - name: kubernetes-dashboard
    namespace: kubernetes-dashboard
    chart: kubernetes-dashboard/kubernetes-dashboard
    version: 7.13.0
    createNamespace: true
    needs:
      - metallb-system/metallb

  - name: argocd
    namespace: argocd
    chart: argo/argo-cd
    version: 8.1.3
    createNamespace: true
    values:
      - server:
          insecure: true
          service:
            type: ClusterIP
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8083"
                prometheus.io/path: "/metrics"
        controller:
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8082"
                prometheus.io/path: "/metrics"
        repoServer:
          metrics:
            enabled: true
            service:
              annotations:
                prometheus.io/scrape: "true"
                prometheus.io/port: "8084"
                prometheus.io/path: "/metrics"
        configs:
          params:
            server.insecure: true
          cm:
            url: https://argocd.timothyw.dev
            accounts.image-updater: apiKey
            accounts.image-updater.enabled: "true"
          rbac:
            policy.csv: |
              p, role:image-updater, applications, get, */*, allow
              p, role:image-updater, applications, update, */*, allow
              g, image-updater, role:image-updater
    needs:
      - metallb-system/metallb

  - name: argocd-image-updater
    namespace: argocd
    chart: argo/argocd-image-updater
    version: 0.12.3
    values:
      - config:
          logLevel: info
          argocd:
            grpcWeb: true
            serverAddress: argocd-server.argocd.svc.cluster.local
            insecure: true
            plaintext: false
        extraArgs:
          - --interval
          - 30s
        metrics:
          enabled: true
          service:
            annotations:
              prometheus.io/scrape: "true"
              prometheus.io/port: "8081"
              prometheus.io/path: "/metrics"
    needs:
      - argocd/argocd

  - name: loki
    namespace: monitoring
    chart: grafana/loki
    version: 6.32.0
    createNamespace: true
    values:
      - loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          schemaConfig:
            configs:
              - from: 2024-04-01
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          ingester:
            chunk_encoding: snappy
          tracing:
            enabled: true
          pattern_ingester:
            enabled: true
          limits_config:
            allow_structured_metadata: true
            volume_enabled: true
            retention_period: 168h
          compactor:
            retention_enabled: true
            retention_delete_delay: 2h
            delete_request_store: s3
          ruler:
            enable_api: true
          querier:
            max_concurrent: 4
        minio:
          enabled: true
        deploymentMode: SingleBinary
        singleBinary:
          replicas: 1
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 200m
              memory: 500Mi
          extraEnv:
            - name: GOMEMLIMIT
              value: 750MiB
        chunksCache:
          writebackSizeLimit: 10MB
        backend:
          replicas: 0
        read:
          replicas: 0
        write:
          replicas: 0
        ingester:
          replicas: 0
        querier:
          replicas: 0
        queryFrontend:
          replicas: 0
        queryScheduler:
          replicas: 0
        distributor:
          replicas: 0
        compactor:
          replicas: 0
        indexGateway:
          replicas: 0
        bloomCompactor:
          replicas: 0
        bloomGateway:
          replicas: 0
    needs:
      - metallb-system/metallb

  - name: prometheus
    namespace: monitoring
    chart: prometheus-community/prometheus
    version: 27.28.0
    values:
      - server:
          persistentVolume:
            enabled: true
            size: 10Gi
        alertmanager:
          enabled: false
        kubeStateMetrics:
          enabled: true
        nodeExporter:
          enabled: true
        pushgateway:
          enabled: false
    needs:
      - monitoring/loki

  - name: grafana
    namespace: monitoring
    chart: grafana/grafana
    version: 9.2.10
    values:
      - persistence:
          type: pvc
          enabled: true
        adminUser: admin
        adminPassword: adminadminadmin
        service:
          enabled: true
          type: ClusterIP
        initChownData:
          enabled: false
        grafana.ini:
          server:
            root_url: https://grafana.timothyw.dev
            serve_from_sub_path: false
        datasources:
          datasources.yaml:
            apiVersion: 1
            datasources:
              - name: Loki
                type: loki
                access: proxy
                orgId: 1
                url: http://loki-gateway.monitoring.svc.cluster.local:80
                basicAuth: false
                isDefault: false
                version: 1
                editable: false
              - name: Prometheus
                type: prometheus
                access: proxy
                orgId: 1
                url: http://prometheus-server.monitoring.svc.cluster.local:80
                basicAuth: false
                isDefault: true
                version: 1
                editable: false
    needs:
      - monitoring/loki
      - monitoring/prometheus

  - name: k8s-monitoring
    namespace: monitoring
    chart: grafana/k8s-monitoring
    version: 3.1.5
    values:
      - cluster:
          name: timothyw-cluster
        destinations:
          - name: prometheus
            type: prometheus
            url: http://prometheus-server.monitoring.svc.cluster.local:80/api/v1/write
          - name: loki
            type: loki
            url: http://loki-gateway.monitoring.svc.cluster.local/loki/api/v1/push
        clusterEvents:
          enabled: true
          collector: alloy-logs
        clusterMetrics:
          enabled: true
          collector: alloy-metrics
        podLogs:
          enabled: true
          gatherMethod: kubernetesApi
          collector: alloy-logs
          labelsToKeep: ["app_kubernetes_io_name","container","instance","job","level","namespace","service_name","service_namespace","deployment_environment","deployment_environment_name"]
          structuredMetadata:
            pod: pod
        alloy-singleton:
          enabled: true
        alloy-metrics:
          enabled: true
        alloy-logs:
          enabled: true
          alloy:
            mounts:
              varlog: false
              dockercontainers: false
            clustering:
              enabled: true
        alloy-profiles:
          enabled: false
        alloy-receiver:
          enabled: false
        selfReporting:
          enabled: true
    needs:
      - monitoring/loki
      - monitoring/prometheus
      - monitoring/grafana